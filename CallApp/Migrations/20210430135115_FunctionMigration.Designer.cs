// <auto-generated />
using System;
using CallApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CallApp.Migrations
{
    [DbContext(typeof(CallDB))]
    [Migration("20210430135115_FunctionMigration")]
    partial class FunctionMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CallApp.Models.getCallsResult", b =>
                {
                    b.Property<int>("CallID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CallDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CallerName")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .HasColumnType("text");

                    b.Property<string>("Solution")
                        .HasColumnType("text");

                    b.HasKey("CallID");

                    b.ToTable("getCallsResult");
                });

            modelBuilder.Entity("CallApp.Models.supCall", b =>
                {
                    b.Property<int>("CallID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CallDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CallerName")
                        .HasColumnType("text");

                    b.Property<int?>("CreateUserID")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsInc")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ObjectID")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<int>("PriorityID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("RecordStatusID")
                        .HasColumnType("integer");

                    b.Property<int?>("ResponsibleUserID")
                        .HasColumnType("integer");

                    b.Property<string>("ShortName")
                        .HasColumnType("text");

                    b.Property<string>("Solution")
                        .HasColumnType("text");

                    b.Property<int>("StatusID")
                        .HasColumnType("integer");

                    b.Property<int?>("TaskID")
                        .HasColumnType("integer");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("CallID");

                    b.HasIndex("CreateUserID");

                    b.HasIndex("ObjectID");

                    b.HasIndex("PriorityID");

                    b.HasIndex("ResponsibleUserID");

                    b.HasIndex("StatusID");

                    b.HasIndex("TaskID");

                    b.ToTable("supCall");
                });

            modelBuilder.Entity("CallApp.Models.supObject", b =>
                {
                    b.Property<int>("ObjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ObjectID");

                    b.ToTable("supObject");

                    b.HasData(
                        new
                        {
                            ObjectID = 1,
                            Name = "УХЭО"
                        },
                        new
                        {
                            ObjectID = 2,
                            Name = "МБДОУ 154"
                        });
                });

            modelBuilder.Entity("CallApp.Models.supPriority", b =>
                {
                    b.Property<int>("PriorityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("PriorityID");

                    b.ToTable("supPriority");

                    b.HasData(
                        new
                        {
                            PriorityID = 1,
                            Name = "Не срочно"
                        },
                        new
                        {
                            PriorityID = 2,
                            Name = "Срочно"
                        });
                });

            modelBuilder.Entity("CallApp.Models.supStatus", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("StatusID");

                    b.ToTable("supStatus");

                    b.HasData(
                        new
                        {
                            StatusID = 1,
                            Name = "Не готово"
                        },
                        new
                        {
                            StatusID = 2,
                            Name = "Готово"
                        });
                });

            modelBuilder.Entity("CallApp.Models.supTask", b =>
                {
                    b.Property<int>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("TaskID");

                    b.ToTable("supTask");

                    b.HasData(
                        new
                        {
                            TaskID = 1,
                            Name = "ТМЦ"
                        },
                        new
                        {
                            TaskID = 2,
                            Name = "Продучет"
                        });
                });

            modelBuilder.Entity("CallApp.Models.supUser", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ShortName")
                        .HasColumnType("text");

                    b.HasKey("UserID");

                    b.ToTable("supUser");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            ShortName = "Катя"
                        },
                        new
                        {
                            UserID = 2,
                            ShortName = "Настя"
                        });
                });

            modelBuilder.Entity("CallApp.Models.supCall", b =>
                {
                    b.HasOne("CallApp.Models.supUser", "CreateUser")
                        .WithMany("CreateUserCalls")
                        .HasForeignKey("CreateUserID");

                    b.HasOne("CallApp.Models.supObject", "supObject")
                        .WithMany("supCall")
                        .HasForeignKey("ObjectID");

                    b.HasOne("CallApp.Models.supPriority", "supPriority")
                        .WithMany("supCall")
                        .HasForeignKey("PriorityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CallApp.Models.supUser", "ResponsibleUser")
                        .WithMany("ResponsibleUserCalls")
                        .HasForeignKey("ResponsibleUserID");

                    b.HasOne("CallApp.Models.supStatus", "supStatus")
                        .WithMany("supCall")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CallApp.Models.supTask", "supTask")
                        .WithMany("supCall")
                        .HasForeignKey("TaskID");
                });
#pragma warning restore 612, 618
        }
    }
}
